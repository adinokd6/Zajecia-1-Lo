# y(x,z)=2x+1
# y(5)=2*5+1=11
# y=2


#jak zainicjowac funckje
#def + nazwa +()
# def nazwe():


#return
def dodawanie(liczba_1,liczba_2):
  suma=liczba_1+liczba_2
  return suma

# y(liczba1,liczba2)=liczba1+liczba2


# print(dodawanie(3,7))
# print(dodawanie(3,10))
# b=dodawanie(13,10)
# print(b)

#Lampka

def wyszukaj(slowo,litera):
  for i in slowo:
    if i==litera:
      print("Znaleziono")

s="Lampka"
l="a"

wyszukaj(s,l)


#Zmienne lokalne i globalne

def suma(l1,l2):
  suma = l1+l2
  return suma 

stala1 = 32
suma2 = suma(4,2) + 3
print(suma2)

#suma to zmienna lokalna w funkcji suma
#jest widoczna tylko w tej funkcji, poza nią nie istnieje!

# suma2, stala1 to zmienne globalne widoczne poza funkcjami


#jak przyjąć argumenty gdy nie wiemy ile ich będzie?
def funkcja(*nati):
  iloczyn = 1
  for arg in nati:
    iloczyn = iloczyn * arg
  print(iloczyn)
  
funkcja()
funkcja(1,2,3,4)
#funkcja funkcja() przyjmuje dowolnie wiele [0; +niesk] elementów


#różne sposoby przypisywania argumentów

#standardowo: 

def urodziny(imie,wiek):
  print("sto lat", imie, "Masz ", wiek, "lat")

urodziny("Natalia", 21)
urodziny(7, "Mati")
urodziny(imie="Marysia", wiek = 7)
urodziny(wiek = 7,imie="Marysia")


#przypisanie wewnątrz deklaracji funkcji
def urodziny2(imie="Staszek",wiek=7):
  print("sto lat", imie, "Masz ", wiek, "lat")

urodziny2()
# mozemy naspisywać argument (analogia do nadpisywania zmiennych)
x = 7
...
x = 8

urodziny2(imie="Kasia")


###########
Rekurencja

#rekurencja 


# def funkcja(parametr1):
#   #jakeis dzialanie
#   return funkcja(parametr-1)

#   ->krok1->krok2

def rec_fib(number):
  print("wchodze do funkcji",number)
  if number <= 1:
    return number
  else:
    return (rec_fib(number-1)+rec_fib(number-2))


print(rec_fib(4))

# rec_fib(4)->rec_fib(3)+rec_fib(2)
# #nastepne kroki
# rec_fib(3)->rec_fib(2)+rec_fib(1)->1+1
# rec_fib(2)->rec_fib(1)+rec_fib(0)->1+0
